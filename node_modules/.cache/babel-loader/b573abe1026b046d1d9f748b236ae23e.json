{"ast":null,"code":"var _jsxFileName = \"/Users/ryankirkland/Desktop/homework/19/employee-directory/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchForm from \"./components/SearchForm\";\nimport Table from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\";\nimport API from \"./utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n  const [carrot, setCarrot] = useState(\"\");\n  useEffect(() => {\n    renderEmployees();\n  }, []);\n  useEffect(() => {\n    if (search === \"\") {\n      setEmployees(employees);\n      return;\n    }\n\n    let employeeSearch = [];\n\n    for (let i = 0; i < employees.length; i++) {\n      if (employees[i].name.toLowerCase().includes(search.toLowerCase())) {\n        employeeSearch.push(employees[i]);\n      }\n\n      ;\n    }\n\n    ;\n    setEmployees(employeeSearch);\n  }, [search]);\n  useEffect(() => {\n    if (sort === \"\") {\n      setCarrot('\\u25BA');\n    }\n\n    if (sort === \"asc\") {\n      employees.sort((name1, name2) => {\n        let emp1 = name1.name.toLowerCase();\n        let emp2 = name2.name.toLowerCase();\n\n        if (emp1 < emp2) {\n          setCarrot('\\u25BC');\n          return -1;\n        }\n\n        return 0;\n      });\n    }\n\n    if (sort === \"desc\") {\n      employees.sort((name1, name2) => {\n        let emp1 = name1.name.toLowerCase();\n        let emp2 = name2.name.toLowerCase();\n\n        if (emp1 > emp2) {\n          setCarrot('\\u25B2');\n          return -1;\n        }\n\n        return 0;\n      });\n    }\n  }, [sort, employees]);\n\n  const renderEmployees = () => {\n    API.getEmployees().then(employees => {\n      setEmployees(employees);\n    }).catch(err => console.log(err));\n  };\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleInputChange: handleInputChange,\n      results: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      carrot: carrot,\n      sort: sort,\n      setSort: setSort,\n      employees: employees,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"WdS7EJtzeThCH7s5eoQWy2xtPuU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryankirkland/Desktop/homework/19/employee-directory/src/App.js"],"names":["React","useState","useEffect","Header","SearchForm","Table","Wrapper","API","App","employees","setEmployees","search","setSearch","sort","setSort","carrot","setCarrot","renderEmployees","employeeSearch","i","length","name","toLowerCase","includes","push","name1","name2","emp1","emp2","getEmployees","then","catch","err","console","log","handleInputChange","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchForm from \"./components/SearchForm\";\nimport Table from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\";\nimport API from \"./utils/API\";\n\nfunction App() {\n\n  const [employees, setEmployees] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n  const [carrot, setCarrot] = useState(\"\");\n\n  useEffect(() => {\n    renderEmployees();\n  }, []);\n\n  useEffect(() => {\n    if (search === \"\") {\n      setEmployees(employees)\n      return;\n    }\n    let employeeSearch = [];\n    for (let i = 0; i < employees.length; i++) {\n      if (employees[i].name.toLowerCase().includes(search.toLowerCase())) {\n        employeeSearch.push(employees[i]);\n      };\n    };\n    setEmployees(employeeSearch);\n  }, [search]);\n\n  useEffect(() => {\n    if (sort === \"\") {\n      setCarrot('\\u25BA')\n    }\n    if (sort === \"asc\") {\n      employees.sort((name1, name2) => {\n        let emp1 = name1.name.toLowerCase();\n        let emp2 = name2.name.toLowerCase();\n        if (emp1 < emp2) {\n          setCarrot('\\u25BC')\n          return -1;\n        }\n        return 0;\n      })\n    }\n    if (sort === \"desc\") {\n      employees.sort((name1, name2) => {\n        let emp1 = name1.name.toLowerCase();\n        let emp2 = name2.name.toLowerCase();\n        if (emp1 > emp2) {\n          setCarrot('\\u25B2')\n          return -1;\n        }\n        return 0;\n      })\n    }\n  }, [sort, employees])\n\n  const renderEmployees = () => {\n    API.getEmployees()\n    .then((employees) => {\n      setEmployees(employees);\n    }).catch(err => console.log(err))\n  };\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n    return (\n      <Wrapper>\n        <Header />\n          <SearchForm\n            handleInputChange={handleInputChange}\n            results={search} \n          />\n          <Table\n            carrot={carrot}\n            sort={sort}\n            setSort={setSort}\n            employees={employees}\n            search={search}\n          />\n      </Wrapper>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}