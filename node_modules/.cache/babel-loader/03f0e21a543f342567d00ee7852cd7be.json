{"ast":null,"code":"import axios from\"axios\";export default{getEmployees:function getEmployees(){return new Promise(function(resolve,reject){axios.get(\"https://randomuser.me/api/?results=50\").then(function(res){var users=res.data.results;var results=users.map(function(user){var DOB=user.dob.date.split(\"T\");return{name:\"\".concat(user.name.first,\" \").concat(user.name.last),email:user.email,image:user.picture.thumbnail,phone:user.phone,dob:DOB[0]};});resolve(results);}).catch(function(err){return reject(err);});});}// Return a Promise to simulate an async call\n// getLanguagesList: function() {\n//   return new Promise((resolve) => {\n//     resolve(languages);\n//   });\n// }\n};","map":{"version":3,"sources":["/Users/ryankirkland/Desktop/homework/19/employee-directory/src/utils/API.js"],"names":["axios","getEmployees","Promise","resolve","reject","get","then","res","users","data","results","map","user","DOB","dob","date","split","name","first","last","email","image","picture","thumbnail","phone","catch","err"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,cAAe,CACXC,YAAY,CAAE,uBAAW,CACvB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCJ,KAAK,CAACK,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAwD,SAACC,GAAD,CAAS,CAC/D,GAAMC,CAAAA,KAAK,CAAGD,GAAG,CAACE,IAAJ,CAASC,OAAvB,CACA,GAAMA,CAAAA,OAAO,CAAGF,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,CAAU,CAClC,GAAMC,CAAAA,GAAG,CAAGD,IAAI,CAACE,GAAL,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAAZ,CACA,MAAO,CACLC,IAAI,WAAKL,IAAI,CAACK,IAAL,CAAUC,KAAf,aAAwBN,IAAI,CAACK,IAAL,CAAUE,IAAlC,CADC,CAELC,KAAK,CAAER,IAAI,CAACQ,KAFP,CAGLC,KAAK,CAAET,IAAI,CAACU,OAAL,CAAaC,SAHf,CAILC,KAAK,CAAEZ,IAAI,CAACY,KAJP,CAKLV,GAAG,CAAED,GAAG,CAAC,CAAD,CALH,CAAP,CAOD,CATe,CAAhB,CAUAV,OAAO,CAACO,OAAD,CAAP,CACD,CAbD,EAaGe,KAbH,CAaS,SAACC,GAAD,QAAStB,CAAAA,MAAM,CAACsB,GAAD,CAAf,EAbT,EAcD,CAfM,CAAP,CAgBD,CACD;AACA;AACA;AACA;AACA;AACA;AAxBW,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getEmployees: function() {\n      return new Promise((resolve, reject) => {\n        axios.get(\"https://randomuser.me/api/?results=50\").then((res) => {\n          const users = res.data.results;\n          const results = users.map((user) => {\n            const DOB = user.dob.date.split(\"T\");\n            return {\n              name: `${user.name.first} ${user.name.last}`,\n              email: user.email,\n              image: user.picture.thumbnail,\n              phone: user.phone,\n              dob: DOB[0]\n            };\n          });\n          resolve(results);\n        }).catch((err) => reject(err));\n      });\n    },\n    // Return a Promise to simulate an async call\n    // getLanguagesList: function() {\n    //   return new Promise((resolve) => {\n    //     resolve(languages);\n    //   });\n    // }\n};\n"]},"metadata":{},"sourceType":"module"}